generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  address           String          @id @unique
  mint              String          @unique
  authority         String
  loanEnabled       Boolean
  loanBasisPoints   Int
  optionEnabled     Boolean
  optionBasisPoints Int
  rentalEnabled     Boolean
  rentalBasisPoints Boolean
  floorPrice        BigInt
  CallOption        CallOption[]
  CallOptionBid     CallOptionBid[]
  Loan              Loan[]
  LoanOffer         LoanOffer[]
  Rental            Rental[]
}

model Loan {
  address            String     @id @unique
  state              LoanState
  borrower           String
  lender             String?
  amount             BigInt?
  basisPoints        Int
  creatorBasisPoints Int
  outstanding        BigInt
  threshold          Int?
  installments       Int
  currentInstallment Int
  noticeIssued       BigInt?
  duration           BigInt
  startDate          BigInt?
  mint               String
  tokenMint          String?
  collectionAddress  String
  Collection         Collection @relation(fields: [collectionAddress], references: [address])
}

model LoanOffer {
  address           String     @id @unique
  id                Int
  lender            String
  amount            BigInt?
  basisPoints       Int
  duration          BigInt
  ltv               Int?
  threshold         Int?
  collectionAddress String
  Collection        Collection @relation(fields: [collectionAddress], references: [address])
}

model CallOption {
  address            String          @id @unique
  state              CallOptionState
  amount             BigInt
  creatorBasisPoints Int
  seller             String
  buyer              String?
  expiry             BigInt
  strikePrice        BigInt
  mint               String
  tokenMint          String?
  collectionAddress  String
  Collection         Collection      @relation(fields: [collectionAddress], references: [address])
}

model CallOptionBid {
  address           String     @id @unique
  id                Int
  buyer             String
  expiry            BigInt
  strikePrice       BigInt
  amount            BigInt
  collectionAddress String
  Collection        Collection @relation(fields: [collectionAddress], references: [address])
}

model FloorPrice {
  address String @id @unique
  amount  BigInt
}

enum LoanState {
  Unlisted
  Listed
  Active
  Defaulted
}

enum CallOptionState {
  Listed
  Active
  Exercised
}

enum RentalState {
  Listed
  Rented
}

model Rental {
  address            String      @id @unique
  state              RentalState
  amount             BigInt
  creatorBasisPoints Int
  lender             String
  borrower           String?
  expiry             BigInt
  currentStart       BigInt?
  currentExpiry      BigInt?
  escrowBalance      BigInt
  mint               String
  collectionAddress  String
  Collection         Collection  @relation(fields: [collectionAddress], references: [address])
}
