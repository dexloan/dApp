import * as anchor from "@project-serum/anchor";
import { Badge, Box, Container, Flex } from "@chakra-ui/react";
import { useAnchorWallet, useConnection } from "@solana/wallet-adapter-react";
import { useQuery } from "react-query";
import type { NextPage } from "next";
import Head from "next/head";
import * as utils from "../utils";
import { Card } from "../components/card";
import { Navbar } from "../components/navbar";
import { fetchListings } from "../lib/query";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const { connection } = useConnection();
  const wallet = useAnchorWallet();
  console.log("wallet: ", wallet);

  const listingsQuery = useQuery(
    ["listings"],
    () => {
      if (wallet) {
        return fetchListings(connection, wallet, []);
      }
    },
    {
      enabled: Boolean(wallet),
      refetchOnWindowFocus: false,
    }
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>Dexloan</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Container maxWidth="1440px">
        <Flex flexDirection="row" wrap="wrap" gap="16px">
          {listingsQuery.data?.map((item) => {
            if (
              item?.listing.publicKey &&
              item?.listing.account.basisPoints &&
              item?.metadata.data.uri &&
              item?.metadata.data.name
            ) {
              return (
                <Card
                  key={item?.listing.publicKey.toBase58()}
                  publicKey={item?.listing.publicKey}
                  uri={item?.metadata.data.uri}
                  imageAlt={item?.metadata.data.name}
                >
                  <Box display="flex" alignItems="baseline">
                    <Badge borderRadius="full" px="2" colorScheme="teal">
                      {item?.listing.account.basisPoints / 100}%
                    </Badge>
                    <Box
                      color="gray.500"
                      fontWeight="semibold"
                      letterSpacing="wide"
                      fontSize="xs"
                      textTransform="uppercase"
                      ml="2"
                    >
                      {utils.toMonths(
                        item?.listing.account.duration?.toNumber()
                      )}{" "}
                      months
                    </Box>
                  </Box>
                  <Box
                    mt="1"
                    fontWeight="semibold"
                    as="h4"
                    lineHeight="tight"
                    isTruncated
                  >
                    {item?.metadata.data.name}
                  </Box>
                  <Box>
                    {item?.listing.account.amount.toNumber() /
                      anchor.web3.LAMPORTS_PER_SOL}
                    &nbsp;â—Ž
                  </Box>
                </Card>
              );
            }
            return null;
          })}
        </Flex>
      </Container>
    </div>
  );
};

export default Home;
